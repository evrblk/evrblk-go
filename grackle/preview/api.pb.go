// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: proto/grackle/preview/api.proto

package grackle

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LockState int32

const (
	LockState_UNLOCKED     LockState = 0
	LockState_READ_LOCKED  LockState = 1
	LockState_WRITE_LOCKED LockState = 2
)

// Enum value maps for LockState.
var (
	LockState_name = map[int32]string{
		0: "UNLOCKED",
		1: "READ_LOCKED",
		2: "WRITE_LOCKED",
	}
	LockState_value = map[string]int32{
		"UNLOCKED":     0,
		"READ_LOCKED":  1,
		"WRITE_LOCKED": 2,
	}
)

func (x LockState) Enum() *LockState {
	p := new(LockState)
	*p = x
	return p
}

func (x LockState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LockState) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_grackle_preview_api_proto_enumTypes[0].Descriptor()
}

func (LockState) Type() protoreflect.EnumType {
	return &file_proto_grackle_preview_api_proto_enumTypes[0]
}

func (x LockState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LockState.Descriptor instead.
func (LockState) EnumDescriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{0}
}

type CreateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceRequest) Reset() {
	*x = CreateNamespaceRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceRequest) ProtoMessage() {}

func (x *CreateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*CreateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{0}
}

func (x *CreateNamespaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNamespaceResponse) Reset() {
	*x = CreateNamespaceResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNamespaceResponse) ProtoMessage() {}

func (x *CreateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*CreateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type ListNamespacesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PaginationToken string                 `protobuf:"bytes,1,opt,name=pagination_token,json=paginationToken,proto3" json:"pagination_token,omitempty"`
	Limit           int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListNamespacesRequest) Reset() {
	*x = ListNamespacesRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesRequest) ProtoMessage() {}

func (x *ListNamespacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesRequest.ProtoReflect.Descriptor instead.
func (*ListNamespacesRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{2}
}

func (x *ListNamespacesRequest) GetPaginationToken() string {
	if x != nil {
		return x.PaginationToken
	}
	return ""
}

func (x *ListNamespacesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListNamespacesResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Namespaces              []*Namespace           `protobuf:"bytes,1,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
	NextPaginationToken     string                 `protobuf:"bytes,2,opt,name=next_pagination_token,json=nextPaginationToken,proto3" json:"next_pagination_token,omitempty"`
	PreviousPaginationToken string                 `protobuf:"bytes,3,opt,name=previous_pagination_token,json=previousPaginationToken,proto3" json:"previous_pagination_token,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListNamespacesResponse) Reset() {
	*x = ListNamespacesResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNamespacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNamespacesResponse) ProtoMessage() {}

func (x *ListNamespacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNamespacesResponse.ProtoReflect.Descriptor instead.
func (*ListNamespacesResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{3}
}

func (x *ListNamespacesResponse) GetNamespaces() []*Namespace {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *ListNamespacesResponse) GetNextPaginationToken() string {
	if x != nil {
		return x.NextPaginationToken
	}
	return ""
}

func (x *ListNamespacesResponse) GetPreviousPaginationToken() string {
	if x != nil {
		return x.PreviousPaginationToken
	}
	return ""
}

type GetNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceRequest) Reset() {
	*x = GetNamespaceRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceRequest) ProtoMessage() {}

func (x *GetNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceRequest.ProtoReflect.Descriptor instead.
func (*GetNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type GetNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNamespaceResponse) Reset() {
	*x = GetNamespaceResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceResponse) ProtoMessage() {}

func (x *GetNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceResponse.ProtoReflect.Descriptor instead.
func (*GetNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type DeleteNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNamespaceRequest) Reset() {
	*x = DeleteNamespaceRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceRequest) ProtoMessage() {}

func (x *DeleteNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceRequest.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type DeleteNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNamespaceResponse) Reset() {
	*x = DeleteNamespaceResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceResponse) ProtoMessage() {}

func (x *DeleteNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceResponse.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{7}
}

type UpdateNamespaceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceRequest) Reset() {
	*x = UpdateNamespaceRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceRequest) ProtoMessage() {}

func (x *UpdateNamespaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceRequest.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateNamespaceRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *UpdateNamespaceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateNamespaceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Namespace     *Namespace             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNamespaceResponse) Reset() {
	*x = UpdateNamespaceResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNamespaceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNamespaceResponse) ProtoMessage() {}

func (x *UpdateNamespaceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNamespaceResponse.ProtoReflect.Descriptor instead.
func (*UpdateNamespaceResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateNamespaceResponse) GetNamespace() *Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

type CreateSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permits       uint64                 `protobuf:"varint,4,opt,name=permits,proto3" json:"permits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemaphoreRequest) Reset() {
	*x = CreateSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemaphoreRequest) ProtoMessage() {}

func (x *CreateSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*CreateSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{10}
}

func (x *CreateSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

func (x *CreateSemaphoreRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSemaphoreRequest) GetPermits() uint64 {
	if x != nil {
		return x.Permits
	}
	return 0
}

type CreateSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semaphore     *Semaphore             `protobuf:"bytes,1,opt,name=semaphore,proto3" json:"semaphore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateSemaphoreResponse) Reset() {
	*x = CreateSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSemaphoreResponse) ProtoMessage() {}

func (x *CreateSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*CreateSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSemaphoreResponse) GetSemaphore() *Semaphore {
	if x != nil {
		return x.Semaphore
	}
	return nil
}

type ListSemaphoresRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName   string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	PaginationToken string                 `protobuf:"bytes,2,opt,name=pagination_token,json=paginationToken,proto3" json:"pagination_token,omitempty"`
	Limit           int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListSemaphoresRequest) Reset() {
	*x = ListSemaphoresRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSemaphoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSemaphoresRequest) ProtoMessage() {}

func (x *ListSemaphoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSemaphoresRequest.ProtoReflect.Descriptor instead.
func (*ListSemaphoresRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListSemaphoresRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ListSemaphoresRequest) GetPaginationToken() string {
	if x != nil {
		return x.PaginationToken
	}
	return ""
}

func (x *ListSemaphoresRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListSemaphoresResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Semaphores              []*Semaphore           `protobuf:"bytes,1,rep,name=semaphores,proto3" json:"semaphores,omitempty"`
	NextPaginationToken     string                 `protobuf:"bytes,2,opt,name=next_pagination_token,json=nextPaginationToken,proto3" json:"next_pagination_token,omitempty"`
	PreviousPaginationToken string                 `protobuf:"bytes,3,opt,name=previous_pagination_token,json=previousPaginationToken,proto3" json:"previous_pagination_token,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListSemaphoresResponse) Reset() {
	*x = ListSemaphoresResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSemaphoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSemaphoresResponse) ProtoMessage() {}

func (x *ListSemaphoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSemaphoresResponse.ProtoReflect.Descriptor instead.
func (*ListSemaphoresResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{13}
}

func (x *ListSemaphoresResponse) GetSemaphores() []*Semaphore {
	if x != nil {
		return x.Semaphores
	}
	return nil
}

func (x *ListSemaphoresResponse) GetNextPaginationToken() string {
	if x != nil {
		return x.NextPaginationToken
	}
	return ""
}

func (x *ListSemaphoresResponse) GetPreviousPaginationToken() string {
	if x != nil {
		return x.PreviousPaginationToken
	}
	return ""
}

type GetSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemaphoreRequest) Reset() {
	*x = GetSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemaphoreRequest) ProtoMessage() {}

func (x *GetSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*GetSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{14}
}

func (x *GetSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

type GetSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semaphore     *Semaphore             `protobuf:"bytes,1,opt,name=semaphore,proto3" json:"semaphore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSemaphoreResponse) Reset() {
	*x = GetSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSemaphoreResponse) ProtoMessage() {}

func (x *GetSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*GetSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{15}
}

func (x *GetSemaphoreResponse) GetSemaphore() *Semaphore {
	if x != nil {
		return x.Semaphore
	}
	return nil
}

type AcquireSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireSemaphoreRequest) Reset() {
	*x = AcquireSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireSemaphoreRequest) ProtoMessage() {}

func (x *AcquireSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*AcquireSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{16}
}

func (x *AcquireSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AcquireSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

func (x *AcquireSemaphoreRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *AcquireSemaphoreRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type AcquireSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semaphore     *Semaphore             `protobuf:"bytes,1,opt,name=semaphore,proto3" json:"semaphore,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireSemaphoreResponse) Reset() {
	*x = AcquireSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireSemaphoreResponse) ProtoMessage() {}

func (x *AcquireSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*AcquireSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{17}
}

func (x *AcquireSemaphoreResponse) GetSemaphore() *Semaphore {
	if x != nil {
		return x.Semaphore
	}
	return nil
}

func (x *AcquireSemaphoreResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReleaseSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseSemaphoreRequest) Reset() {
	*x = ReleaseSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSemaphoreRequest) ProtoMessage() {}

func (x *ReleaseSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*ReleaseSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{18}
}

func (x *ReleaseSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ReleaseSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

func (x *ReleaseSemaphoreRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type ReleaseSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semaphore     *Semaphore             `protobuf:"bytes,1,opt,name=semaphore,proto3" json:"semaphore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseSemaphoreResponse) Reset() {
	*x = ReleaseSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseSemaphoreResponse) ProtoMessage() {}

func (x *ReleaseSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*ReleaseSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{19}
}

func (x *ReleaseSemaphoreResponse) GetSemaphore() *Semaphore {
	if x != nil {
		return x.Semaphore
	}
	return nil
}

type UpdateSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Permits       uint64                 `protobuf:"varint,4,opt,name=permits,proto3" json:"permits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemaphoreRequest) Reset() {
	*x = UpdateSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemaphoreRequest) ProtoMessage() {}

func (x *UpdateSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*UpdateSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *UpdateSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

func (x *UpdateSemaphoreRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSemaphoreRequest) GetPermits() uint64 {
	if x != nil {
		return x.Permits
	}
	return 0
}

type UpdateSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Semaphore     *Semaphore             `protobuf:"bytes,1,opt,name=semaphore,proto3" json:"semaphore,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSemaphoreResponse) Reset() {
	*x = UpdateSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSemaphoreResponse) ProtoMessage() {}

func (x *UpdateSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*UpdateSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateSemaphoreResponse) GetSemaphore() *Semaphore {
	if x != nil {
		return x.Semaphore
	}
	return nil
}

type DeleteSemaphoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	SemaphoreName string                 `protobuf:"bytes,2,opt,name=semaphore_name,json=semaphoreName,proto3" json:"semaphore_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemaphoreRequest) Reset() {
	*x = DeleteSemaphoreRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemaphoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemaphoreRequest) ProtoMessage() {}

func (x *DeleteSemaphoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemaphoreRequest.ProtoReflect.Descriptor instead.
func (*DeleteSemaphoreRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteSemaphoreRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DeleteSemaphoreRequest) GetSemaphoreName() string {
	if x != nil {
		return x.SemaphoreName
	}
	return ""
}

type DeleteSemaphoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSemaphoreResponse) Reset() {
	*x = DeleteSemaphoreResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSemaphoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSemaphoreResponse) ProtoMessage() {}

func (x *DeleteSemaphoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSemaphoreResponse.ProtoReflect.Descriptor instead.
func (*DeleteSemaphoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{23}
}

type Semaphore struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Name             string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt        int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Permits          uint64                 `protobuf:"varint,5,opt,name=permits,proto3" json:"permits,omitempty"`
	SemaphoreHolders []*SemaphoreHolder     `protobuf:"bytes,6,rep,name=semaphore_holders,json=semaphoreHolders,proto3" json:"semaphore_holders,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Semaphore) Reset() {
	*x = Semaphore{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Semaphore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Semaphore) ProtoMessage() {}

func (x *Semaphore) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Semaphore.ProtoReflect.Descriptor instead.
func (*Semaphore) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{24}
}

func (x *Semaphore) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Semaphore) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Semaphore) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Semaphore) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Semaphore) GetPermits() uint64 {
	if x != nil {
		return x.Permits
	}
	return 0
}

func (x *Semaphore) GetSemaphoreHolders() []*SemaphoreHolder {
	if x != nil {
		return x.SemaphoreHolders
	}
	return nil
}

type SemaphoreHolder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	LockedAt      int64                  `protobuf:"varint,2,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SemaphoreHolder) Reset() {
	*x = SemaphoreHolder{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SemaphoreHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SemaphoreHolder) ProtoMessage() {}

func (x *SemaphoreHolder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SemaphoreHolder.ProtoReflect.Descriptor instead.
func (*SemaphoreHolder) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{25}
}

func (x *SemaphoreHolder) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *SemaphoreHolder) GetLockedAt() int64 {
	if x != nil {
		return x.LockedAt
	}
	return 0
}

func (x *SemaphoreHolder) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CreateWaitGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	WaitGroupName string                 `protobuf:"bytes,2,opt,name=wait_group_name,json=waitGroupName,proto3" json:"wait_group_name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Counter       uint64                 `protobuf:"varint,4,opt,name=counter,proto3" json:"counter,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitGroupRequest) Reset() {
	*x = CreateWaitGroupRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitGroupRequest) ProtoMessage() {}

func (x *CreateWaitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitGroupRequest.ProtoReflect.Descriptor instead.
func (*CreateWaitGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{26}
}

func (x *CreateWaitGroupRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CreateWaitGroupRequest) GetWaitGroupName() string {
	if x != nil {
		return x.WaitGroupName
	}
	return ""
}

func (x *CreateWaitGroupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateWaitGroupRequest) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *CreateWaitGroupRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CreateWaitGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitGroup     *WaitGroup             `protobuf:"bytes,1,opt,name=wait_group,json=waitGroup,proto3" json:"wait_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateWaitGroupResponse) Reset() {
	*x = CreateWaitGroupResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateWaitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWaitGroupResponse) ProtoMessage() {}

func (x *CreateWaitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWaitGroupResponse.ProtoReflect.Descriptor instead.
func (*CreateWaitGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{27}
}

func (x *CreateWaitGroupResponse) GetWaitGroup() *WaitGroup {
	if x != nil {
		return x.WaitGroup
	}
	return nil
}

type ListWaitGroupsRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName   string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	PaginationToken string                 `protobuf:"bytes,2,opt,name=pagination_token,json=paginationToken,proto3" json:"pagination_token,omitempty"`
	Limit           int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListWaitGroupsRequest) Reset() {
	*x = ListWaitGroupsRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWaitGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitGroupsRequest) ProtoMessage() {}

func (x *ListWaitGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListWaitGroupsRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{28}
}

func (x *ListWaitGroupsRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ListWaitGroupsRequest) GetPaginationToken() string {
	if x != nil {
		return x.PaginationToken
	}
	return ""
}

func (x *ListWaitGroupsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListWaitGroupsResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	WaitGroups              []*WaitGroup           `protobuf:"bytes,1,rep,name=wait_groups,json=waitGroups,proto3" json:"wait_groups,omitempty"`
	NextPaginationToken     string                 `protobuf:"bytes,2,opt,name=next_pagination_token,json=nextPaginationToken,proto3" json:"next_pagination_token,omitempty"`
	PreviousPaginationToken string                 `protobuf:"bytes,3,opt,name=previous_pagination_token,json=previousPaginationToken,proto3" json:"previous_pagination_token,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListWaitGroupsResponse) Reset() {
	*x = ListWaitGroupsResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListWaitGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWaitGroupsResponse) ProtoMessage() {}

func (x *ListWaitGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWaitGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListWaitGroupsResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{29}
}

func (x *ListWaitGroupsResponse) GetWaitGroups() []*WaitGroup {
	if x != nil {
		return x.WaitGroups
	}
	return nil
}

func (x *ListWaitGroupsResponse) GetNextPaginationToken() string {
	if x != nil {
		return x.NextPaginationToken
	}
	return ""
}

func (x *ListWaitGroupsResponse) GetPreviousPaginationToken() string {
	if x != nil {
		return x.PreviousPaginationToken
	}
	return ""
}

type GetWaitGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	WaitGroupName string                 `protobuf:"bytes,2,opt,name=wait_group_name,json=waitGroupName,proto3" json:"wait_group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaitGroupRequest) Reset() {
	*x = GetWaitGroupRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaitGroupRequest) ProtoMessage() {}

func (x *GetWaitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaitGroupRequest.ProtoReflect.Descriptor instead.
func (*GetWaitGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{30}
}

func (x *GetWaitGroupRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetWaitGroupRequest) GetWaitGroupName() string {
	if x != nil {
		return x.WaitGroupName
	}
	return ""
}

type GetWaitGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitGroup     *WaitGroup             `protobuf:"bytes,1,opt,name=wait_group,json=waitGroup,proto3" json:"wait_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetWaitGroupResponse) Reset() {
	*x = GetWaitGroupResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetWaitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWaitGroupResponse) ProtoMessage() {}

func (x *GetWaitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWaitGroupResponse.ProtoReflect.Descriptor instead.
func (*GetWaitGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{31}
}

func (x *GetWaitGroupResponse) GetWaitGroup() *WaitGroup {
	if x != nil {
		return x.WaitGroup
	}
	return nil
}

type DeleteWaitGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	WaitGroupName string                 `protobuf:"bytes,2,opt,name=wait_group_name,json=waitGroupName,proto3" json:"wait_group_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWaitGroupRequest) Reset() {
	*x = DeleteWaitGroupRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWaitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWaitGroupRequest) ProtoMessage() {}

func (x *DeleteWaitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWaitGroupRequest.ProtoReflect.Descriptor instead.
func (*DeleteWaitGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteWaitGroupRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DeleteWaitGroupRequest) GetWaitGroupName() string {
	if x != nil {
		return x.WaitGroupName
	}
	return ""
}

type DeleteWaitGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteWaitGroupResponse) Reset() {
	*x = DeleteWaitGroupResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteWaitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWaitGroupResponse) ProtoMessage() {}

func (x *DeleteWaitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWaitGroupResponse.ProtoReflect.Descriptor instead.
func (*DeleteWaitGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{33}
}

type AddJobsToWaitGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	WaitGroupName string                 `protobuf:"bytes,2,opt,name=wait_group_name,json=waitGroupName,proto3" json:"wait_group_name,omitempty"`
	Counter       uint64                 `protobuf:"varint,3,opt,name=counter,proto3" json:"counter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddJobsToWaitGroupRequest) Reset() {
	*x = AddJobsToWaitGroupRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddJobsToWaitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobsToWaitGroupRequest) ProtoMessage() {}

func (x *AddJobsToWaitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobsToWaitGroupRequest.ProtoReflect.Descriptor instead.
func (*AddJobsToWaitGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{34}
}

func (x *AddJobsToWaitGroupRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AddJobsToWaitGroupRequest) GetWaitGroupName() string {
	if x != nil {
		return x.WaitGroupName
	}
	return ""
}

func (x *AddJobsToWaitGroupRequest) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

type AddJobsToWaitGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitGroup     *WaitGroup             `protobuf:"bytes,1,opt,name=wait_group,json=waitGroup,proto3" json:"wait_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddJobsToWaitGroupResponse) Reset() {
	*x = AddJobsToWaitGroupResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddJobsToWaitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJobsToWaitGroupResponse) ProtoMessage() {}

func (x *AddJobsToWaitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJobsToWaitGroupResponse.ProtoReflect.Descriptor instead.
func (*AddJobsToWaitGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{35}
}

func (x *AddJobsToWaitGroupResponse) GetWaitGroup() *WaitGroup {
	if x != nil {
		return x.WaitGroup
	}
	return nil
}

type CompleteJobsFromWaitGroupRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	WaitGroupName string                 `protobuf:"bytes,2,opt,name=wait_group_name,json=waitGroupName,proto3" json:"wait_group_name,omitempty"`
	ProcessIds    []string               `protobuf:"bytes,3,rep,name=process_ids,json=processIds,proto3" json:"process_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteJobsFromWaitGroupRequest) Reset() {
	*x = CompleteJobsFromWaitGroupRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteJobsFromWaitGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteJobsFromWaitGroupRequest) ProtoMessage() {}

func (x *CompleteJobsFromWaitGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteJobsFromWaitGroupRequest.ProtoReflect.Descriptor instead.
func (*CompleteJobsFromWaitGroupRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{36}
}

func (x *CompleteJobsFromWaitGroupRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *CompleteJobsFromWaitGroupRequest) GetWaitGroupName() string {
	if x != nil {
		return x.WaitGroupName
	}
	return ""
}

func (x *CompleteJobsFromWaitGroupRequest) GetProcessIds() []string {
	if x != nil {
		return x.ProcessIds
	}
	return nil
}

type CompleteJobsFromWaitGroupResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WaitGroup     *WaitGroup             `protobuf:"bytes,1,opt,name=wait_group,json=waitGroup,proto3" json:"wait_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CompleteJobsFromWaitGroupResponse) Reset() {
	*x = CompleteJobsFromWaitGroupResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CompleteJobsFromWaitGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteJobsFromWaitGroupResponse) ProtoMessage() {}

func (x *CompleteJobsFromWaitGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteJobsFromWaitGroupResponse.ProtoReflect.Descriptor instead.
func (*CompleteJobsFromWaitGroupResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{37}
}

func (x *CompleteJobsFromWaitGroupResponse) GetWaitGroup() *WaitGroup {
	if x != nil {
		return x.WaitGroup
	}
	return nil
}

type WaitGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Counter       uint64                 `protobuf:"varint,6,opt,name=counter,proto3" json:"counter,omitempty"`
	Completed     uint64                 `protobuf:"varint,7,opt,name=completed,proto3" json:"completed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitGroup) Reset() {
	*x = WaitGroup{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitGroup) ProtoMessage() {}

func (x *WaitGroup) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitGroup.ProtoReflect.Descriptor instead.
func (*WaitGroup) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{38}
}

func (x *WaitGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WaitGroup) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WaitGroup) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *WaitGroup) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *WaitGroup) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *WaitGroup) GetCounter() uint64 {
	if x != nil {
		return x.Counter
	}
	return 0
}

func (x *WaitGroup) GetCompleted() uint64 {
	if x != nil {
		return x.Completed
	}
	return 0
}

type AcquireLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	WriteLock     bool                   `protobuf:"varint,4,opt,name=write_lock,json=writeLock,proto3" json:"write_lock,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockRequest) Reset() {
	*x = AcquireLockRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockRequest) ProtoMessage() {}

func (x *AcquireLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockRequest.ProtoReflect.Descriptor instead.
func (*AcquireLockRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{39}
}

func (x *AcquireLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *AcquireLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *AcquireLockRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *AcquireLockRequest) GetWriteLock() bool {
	if x != nil {
		return x.WriteLock
	}
	return false
}

func (x *AcquireLockRequest) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type AcquireLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AcquireLockResponse) Reset() {
	*x = AcquireLockResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcquireLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcquireLockResponse) ProtoMessage() {}

func (x *AcquireLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcquireLockResponse.ProtoReflect.Descriptor instead.
func (*AcquireLockResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{40}
}

func (x *AcquireLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

func (x *AcquireLockResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ReleaseLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	ProcessId     string                 `protobuf:"bytes,3,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseLockRequest) Reset() {
	*x = ReleaseLockRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLockRequest) ProtoMessage() {}

func (x *ReleaseLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLockRequest.ProtoReflect.Descriptor instead.
func (*ReleaseLockRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{41}
}

func (x *ReleaseLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ReleaseLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

func (x *ReleaseLockRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

type ReleaseLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseLockResponse) Reset() {
	*x = ReleaseLockResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseLockResponse) ProtoMessage() {}

func (x *ReleaseLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseLockResponse.ProtoReflect.Descriptor instead.
func (*ReleaseLockResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{42}
}

func (x *ReleaseLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

type GetLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockRequest) Reset() {
	*x = GetLockRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockRequest) ProtoMessage() {}

func (x *GetLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockRequest.ProtoReflect.Descriptor instead.
func (*GetLockRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{43}
}

func (x *GetLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *GetLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type GetLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lock          *Lock                  `protobuf:"bytes,1,opt,name=lock,proto3" json:"lock,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLockResponse) Reset() {
	*x = GetLockResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLockResponse) ProtoMessage() {}

func (x *GetLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLockResponse.ProtoReflect.Descriptor instead.
func (*GetLockResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{44}
}

func (x *GetLockResponse) GetLock() *Lock {
	if x != nil {
		return x.Lock
	}
	return nil
}

type DeleteLockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	LockName      string                 `protobuf:"bytes,2,opt,name=lock_name,json=lockName,proto3" json:"lock_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockRequest) Reset() {
	*x = DeleteLockRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockRequest) ProtoMessage() {}

func (x *DeleteLockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockRequest.ProtoReflect.Descriptor instead.
func (*DeleteLockRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteLockRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *DeleteLockRequest) GetLockName() string {
	if x != nil {
		return x.LockName
	}
	return ""
}

type DeleteLockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteLockResponse) Reset() {
	*x = DeleteLockResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteLockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLockResponse) ProtoMessage() {}

func (x *DeleteLockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLockResponse.ProtoReflect.Descriptor instead.
func (*DeleteLockResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{46}
}

type ListLocksRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NamespaceName   string                 `protobuf:"bytes,1,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
	PaginationToken string                 `protobuf:"bytes,2,opt,name=pagination_token,json=paginationToken,proto3" json:"pagination_token,omitempty"`
	Limit           int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListLocksRequest) Reset() {
	*x = ListLocksRequest{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocksRequest) ProtoMessage() {}

func (x *ListLocksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocksRequest.ProtoReflect.Descriptor instead.
func (*ListLocksRequest) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{47}
}

func (x *ListLocksRequest) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

func (x *ListLocksRequest) GetPaginationToken() string {
	if x != nil {
		return x.PaginationToken
	}
	return ""
}

func (x *ListLocksRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListLocksResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	Locks                   []*Lock                `protobuf:"bytes,1,rep,name=locks,proto3" json:"locks,omitempty"`
	NextPaginationToken     string                 `protobuf:"bytes,2,opt,name=next_pagination_token,json=nextPaginationToken,proto3" json:"next_pagination_token,omitempty"`
	PreviousPaginationToken string                 `protobuf:"bytes,3,opt,name=previous_pagination_token,json=previousPaginationToken,proto3" json:"previous_pagination_token,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ListLocksResponse) Reset() {
	*x = ListLocksResponse{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocksResponse) ProtoMessage() {}

func (x *ListLocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocksResponse.ProtoReflect.Descriptor instead.
func (*ListLocksResponse) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{48}
}

func (x *ListLocksResponse) GetLocks() []*Lock {
	if x != nil {
		return x.Locks
	}
	return nil
}

func (x *ListLocksResponse) GetNextPaginationToken() string {
	if x != nil {
		return x.NextPaginationToken
	}
	return ""
}

func (x *ListLocksResponse) GetPreviousPaginationToken() string {
	if x != nil {
		return x.PreviousPaginationToken
	}
	return ""
}

type Lock struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Name            string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State           LockState              `protobuf:"varint,2,opt,name=state,proto3,enum=com.evrblk.grackle.preview.LockState" json:"state,omitempty"`
	LockedAt        int64                  `protobuf:"varint,3,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	WriteLockHolder *LockHolder            `protobuf:"bytes,4,opt,name=write_lock_holder,json=writeLockHolder,proto3" json:"write_lock_holder,omitempty"`
	ReadLockHolders []*LockHolder          `protobuf:"bytes,5,rep,name=read_lock_holders,json=readLockHolders,proto3" json:"read_lock_holders,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Lock) Reset() {
	*x = Lock{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lock) ProtoMessage() {}

func (x *Lock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lock.ProtoReflect.Descriptor instead.
func (*Lock) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{49}
}

func (x *Lock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lock) GetState() LockState {
	if x != nil {
		return x.State
	}
	return LockState_UNLOCKED
}

func (x *Lock) GetLockedAt() int64 {
	if x != nil {
		return x.LockedAt
	}
	return 0
}

func (x *Lock) GetWriteLockHolder() *LockHolder {
	if x != nil {
		return x.WriteLockHolder
	}
	return nil
}

func (x *Lock) GetReadLockHolders() []*LockHolder {
	if x != nil {
		return x.ReadLockHolders
	}
	return nil
}

type LockHolder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	LockedAt      int64                  `protobuf:"varint,2,opt,name=locked_at,json=lockedAt,proto3" json:"locked_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockHolder) Reset() {
	*x = LockHolder{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockHolder) ProtoMessage() {}

func (x *LockHolder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockHolder.ProtoReflect.Descriptor instead.
func (*LockHolder) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{50}
}

func (x *LockHolder) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *LockHolder) GetLockedAt() int64 {
	if x != nil {
		return x.LockedAt
	}
	return 0
}

func (x *LockHolder) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type Namespace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Namespace) Reset() {
	*x = Namespace{}
	mi := &file_proto_grackle_preview_api_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Namespace) ProtoMessage() {}

func (x *Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_proto_grackle_preview_api_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Namespace.ProtoReflect.Descriptor instead.
func (*Namespace) Descriptor() ([]byte, []int) {
	return file_proto_grackle_preview_api_proto_rawDescGZIP(), []int{51}
}

func (x *Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Namespace) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Namespace) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Namespace) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_proto_grackle_preview_api_proto protoreflect.FileDescriptor

const file_proto_grackle_preview_api_proto_rawDesc = "" +
	"\n" +
	"\x1fproto/grackle/preview/api.proto\x12\x1acom.evrblk.grackle.preview\"N\n" +
	"\x16CreateNamespaceRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"^\n" +
	"\x17CreateNamespaceResponse\x12C\n" +
	"\tnamespace\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.NamespaceR\tnamespace\"X\n" +
	"\x15ListNamespacesRequest\x12)\n" +
	"\x10pagination_token\x18\x01 \x01(\tR\x0fpaginationToken\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\"\xcf\x01\n" +
	"\x16ListNamespacesResponse\x12E\n" +
	"\n" +
	"namespaces\x18\x01 \x03(\v2%.com.evrblk.grackle.preview.NamespaceR\n" +
	"namespaces\x122\n" +
	"\x15next_pagination_token\x18\x02 \x01(\tR\x13nextPaginationToken\x12:\n" +
	"\x19previous_pagination_token\x18\x03 \x01(\tR\x17previousPaginationToken\"<\n" +
	"\x13GetNamespaceRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\"[\n" +
	"\x14GetNamespaceResponse\x12C\n" +
	"\tnamespace\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.NamespaceR\tnamespace\"?\n" +
	"\x16DeleteNamespaceRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\"\x19\n" +
	"\x17DeleteNamespaceResponse\"a\n" +
	"\x16UpdateNamespaceRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"^\n" +
	"\x17UpdateNamespaceResponse\x12C\n" +
	"\tnamespace\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.NamespaceR\tnamespace\"\xa2\x01\n" +
	"\x16CreateSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\apermits\x18\x04 \x01(\x04R\apermits\"^\n" +
	"\x17CreateSemaphoreResponse\x12C\n" +
	"\tsemaphore\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.SemaphoreR\tsemaphore\"\x7f\n" +
	"\x15ListSemaphoresRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12)\n" +
	"\x10pagination_token\x18\x02 \x01(\tR\x0fpaginationToken\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xcf\x01\n" +
	"\x16ListSemaphoresResponse\x12E\n" +
	"\n" +
	"semaphores\x18\x01 \x03(\v2%.com.evrblk.grackle.preview.SemaphoreR\n" +
	"semaphores\x122\n" +
	"\x15next_pagination_token\x18\x02 \x01(\tR\x13nextPaginationToken\x12:\n" +
	"\x19previous_pagination_token\x18\x03 \x01(\tR\x17previousPaginationToken\"c\n" +
	"\x13GetSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\"[\n" +
	"\x14GetSemaphoreResponse\x12C\n" +
	"\tsemaphore\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.SemaphoreR\tsemaphore\"\xa5\x01\n" +
	"\x17AcquireSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\x12\x1d\n" +
	"\n" +
	"process_id\x18\x03 \x01(\tR\tprocessId\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\"y\n" +
	"\x18AcquireSemaphoreResponse\x12C\n" +
	"\tsemaphore\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.SemaphoreR\tsemaphore\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"\x86\x01\n" +
	"\x17ReleaseSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\x12\x1d\n" +
	"\n" +
	"process_id\x18\x03 \x01(\tR\tprocessId\"_\n" +
	"\x18ReleaseSemaphoreResponse\x12C\n" +
	"\tsemaphore\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.SemaphoreR\tsemaphore\"\xa2\x01\n" +
	"\x16UpdateSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\apermits\x18\x04 \x01(\x04R\apermits\"^\n" +
	"\x17UpdateSemaphoreResponse\x12C\n" +
	"\tsemaphore\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.SemaphoreR\tsemaphore\"f\n" +
	"\x16DeleteSemaphoreRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12%\n" +
	"\x0esemaphore_name\x18\x02 \x01(\tR\rsemaphoreName\"\x19\n" +
	"\x17DeleteSemaphoreResponse\"\xf3\x01\n" +
	"\tSemaphore\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\x12\x18\n" +
	"\apermits\x18\x05 \x01(\x04R\apermits\x12X\n" +
	"\x11semaphore_holders\x18\x06 \x03(\v2+.com.evrblk.grackle.preview.SemaphoreHolderR\x10semaphoreHolders\"l\n" +
	"\x0fSemaphoreHolder\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1b\n" +
	"\tlocked_at\x18\x02 \x01(\x03R\blockedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\"\xc2\x01\n" +
	"\x16CreateWaitGroupRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12&\n" +
	"\x0fwait_group_name\x18\x02 \x01(\tR\rwaitGroupName\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x18\n" +
	"\acounter\x18\x04 \x01(\x04R\acounter\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"_\n" +
	"\x17CreateWaitGroupResponse\x12D\n" +
	"\n" +
	"wait_group\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.WaitGroupR\twaitGroup\"\x7f\n" +
	"\x15ListWaitGroupsRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12)\n" +
	"\x10pagination_token\x18\x02 \x01(\tR\x0fpaginationToken\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xd0\x01\n" +
	"\x16ListWaitGroupsResponse\x12F\n" +
	"\vwait_groups\x18\x01 \x03(\v2%.com.evrblk.grackle.preview.WaitGroupR\n" +
	"waitGroups\x122\n" +
	"\x15next_pagination_token\x18\x02 \x01(\tR\x13nextPaginationToken\x12:\n" +
	"\x19previous_pagination_token\x18\x03 \x01(\tR\x17previousPaginationToken\"d\n" +
	"\x13GetWaitGroupRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12&\n" +
	"\x0fwait_group_name\x18\x02 \x01(\tR\rwaitGroupName\"\\\n" +
	"\x14GetWaitGroupResponse\x12D\n" +
	"\n" +
	"wait_group\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.WaitGroupR\twaitGroup\"g\n" +
	"\x16DeleteWaitGroupRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12&\n" +
	"\x0fwait_group_name\x18\x02 \x01(\tR\rwaitGroupName\"\x19\n" +
	"\x17DeleteWaitGroupResponse\"\x84\x01\n" +
	"\x19AddJobsToWaitGroupRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12&\n" +
	"\x0fwait_group_name\x18\x02 \x01(\tR\rwaitGroupName\x12\x18\n" +
	"\acounter\x18\x03 \x01(\x04R\acounter\"b\n" +
	"\x1aAddJobsToWaitGroupResponse\x12D\n" +
	"\n" +
	"wait_group\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.WaitGroupR\twaitGroup\"\x92\x01\n" +
	" CompleteJobsFromWaitGroupRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12&\n" +
	"\x0fwait_group_name\x18\x02 \x01(\tR\rwaitGroupName\x12\x1f\n" +
	"\vprocess_ids\x18\x03 \x03(\tR\n" +
	"processIds\"i\n" +
	"!CompleteJobsFromWaitGroupResponse\x12D\n" +
	"\n" +
	"wait_group\x18\x01 \x01(\v2%.com.evrblk.grackle.preview.WaitGroupR\twaitGroup\"\xd6\x01\n" +
	"\tWaitGroup\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\x12\x18\n" +
	"\acounter\x18\x06 \x01(\x04R\acounter\x12\x1c\n" +
	"\tcompleted\x18\a \x01(\x04R\tcompleted\"\xb5\x01\n" +
	"\x12AcquireLockRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\x12\x1d\n" +
	"\n" +
	"process_id\x18\x03 \x01(\tR\tprocessId\x12\x1d\n" +
	"\n" +
	"write_lock\x18\x04 \x01(\bR\twriteLock\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x05 \x01(\x03R\texpiresAt\"e\n" +
	"\x13AcquireLockResponse\x124\n" +
	"\x04lock\x18\x01 \x01(\v2 .com.evrblk.grackle.preview.LockR\x04lock\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\"w\n" +
	"\x12ReleaseLockRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\x12\x1d\n" +
	"\n" +
	"process_id\x18\x03 \x01(\tR\tprocessId\"K\n" +
	"\x13ReleaseLockResponse\x124\n" +
	"\x04lock\x18\x01 \x01(\v2 .com.evrblk.grackle.preview.LockR\x04lock\"T\n" +
	"\x0eGetLockRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\"G\n" +
	"\x0fGetLockResponse\x124\n" +
	"\x04lock\x18\x01 \x01(\v2 .com.evrblk.grackle.preview.LockR\x04lock\"W\n" +
	"\x11DeleteLockRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12\x1b\n" +
	"\tlock_name\x18\x02 \x01(\tR\blockName\"\x14\n" +
	"\x12DeleteLockResponse\"z\n" +
	"\x10ListLocksRequest\x12%\n" +
	"\x0enamespace_name\x18\x01 \x01(\tR\rnamespaceName\x12)\n" +
	"\x10pagination_token\x18\x02 \x01(\tR\x0fpaginationToken\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xbb\x01\n" +
	"\x11ListLocksResponse\x126\n" +
	"\x05locks\x18\x01 \x03(\v2 .com.evrblk.grackle.preview.LockR\x05locks\x122\n" +
	"\x15next_pagination_token\x18\x02 \x01(\tR\x13nextPaginationToken\x12:\n" +
	"\x19previous_pagination_token\x18\x03 \x01(\tR\x17previousPaginationToken\"\x9c\x02\n" +
	"\x04Lock\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12;\n" +
	"\x05state\x18\x02 \x01(\x0e2%.com.evrblk.grackle.preview.LockStateR\x05state\x12\x1b\n" +
	"\tlocked_at\x18\x03 \x01(\x03R\blockedAt\x12R\n" +
	"\x11write_lock_holder\x18\x04 \x01(\v2&.com.evrblk.grackle.preview.LockHolderR\x0fwriteLockHolder\x12R\n" +
	"\x11read_lock_holders\x18\x05 \x03(\v2&.com.evrblk.grackle.preview.LockHolderR\x0freadLockHolders\"g\n" +
	"\n" +
	"LockHolder\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x1b\n" +
	"\tlocked_at\x18\x02 \x01(\x03R\blockedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\"\x7f\n" +
	"\tNamespace\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt*<\n" +
	"\tLockState\x12\f\n" +
	"\bUNLOCKED\x10\x00\x12\x0f\n" +
	"\vREAD_LOCKED\x10\x01\x12\x10\n" +
	"\fWRITE_LOCKED\x10\x022\x9f\x16\n" +
	"\x11GracklePreviewApi\x12|\n" +
	"\x0fCreateNamespace\x122.com.evrblk.grackle.preview.CreateNamespaceRequest\x1a3.com.evrblk.grackle.preview.CreateNamespaceResponse\"\x00\x12y\n" +
	"\x0eListNamespaces\x121.com.evrblk.grackle.preview.ListNamespacesRequest\x1a2.com.evrblk.grackle.preview.ListNamespacesResponse\"\x00\x12s\n" +
	"\fGetNamespace\x12/.com.evrblk.grackle.preview.GetNamespaceRequest\x1a0.com.evrblk.grackle.preview.GetNamespaceResponse\"\x00\x12|\n" +
	"\x0fDeleteNamespace\x122.com.evrblk.grackle.preview.DeleteNamespaceRequest\x1a3.com.evrblk.grackle.preview.DeleteNamespaceResponse\"\x00\x12|\n" +
	"\x0fUpdateNamespace\x122.com.evrblk.grackle.preview.UpdateNamespaceRequest\x1a3.com.evrblk.grackle.preview.UpdateNamespaceResponse\"\x00\x12|\n" +
	"\x0fCreateSemaphore\x122.com.evrblk.grackle.preview.CreateSemaphoreRequest\x1a3.com.evrblk.grackle.preview.CreateSemaphoreResponse\"\x00\x12y\n" +
	"\x0eListSemaphores\x121.com.evrblk.grackle.preview.ListSemaphoresRequest\x1a2.com.evrblk.grackle.preview.ListSemaphoresResponse\"\x00\x12s\n" +
	"\fGetSemaphore\x12/.com.evrblk.grackle.preview.GetSemaphoreRequest\x1a0.com.evrblk.grackle.preview.GetSemaphoreResponse\"\x00\x12\x7f\n" +
	"\x10AcquireSemaphore\x123.com.evrblk.grackle.preview.AcquireSemaphoreRequest\x1a4.com.evrblk.grackle.preview.AcquireSemaphoreResponse\"\x00\x12\x7f\n" +
	"\x10ReleaseSemaphore\x123.com.evrblk.grackle.preview.ReleaseSemaphoreRequest\x1a4.com.evrblk.grackle.preview.ReleaseSemaphoreResponse\"\x00\x12|\n" +
	"\x0fUpdateSemaphore\x122.com.evrblk.grackle.preview.UpdateSemaphoreRequest\x1a3.com.evrblk.grackle.preview.UpdateSemaphoreResponse\"\x00\x12|\n" +
	"\x0fDeleteSemaphore\x122.com.evrblk.grackle.preview.DeleteSemaphoreRequest\x1a3.com.evrblk.grackle.preview.DeleteSemaphoreResponse\"\x00\x12|\n" +
	"\x0fCreateWaitGroup\x122.com.evrblk.grackle.preview.CreateWaitGroupRequest\x1a3.com.evrblk.grackle.preview.CreateWaitGroupResponse\"\x00\x12y\n" +
	"\x0eListWaitGroups\x121.com.evrblk.grackle.preview.ListWaitGroupsRequest\x1a2.com.evrblk.grackle.preview.ListWaitGroupsResponse\"\x00\x12s\n" +
	"\fGetWaitGroup\x12/.com.evrblk.grackle.preview.GetWaitGroupRequest\x1a0.com.evrblk.grackle.preview.GetWaitGroupResponse\"\x00\x12|\n" +
	"\x0fDeleteWaitGroup\x122.com.evrblk.grackle.preview.DeleteWaitGroupRequest\x1a3.com.evrblk.grackle.preview.DeleteWaitGroupResponse\"\x00\x12\x85\x01\n" +
	"\x12AddJobsToWaitGroup\x125.com.evrblk.grackle.preview.AddJobsToWaitGroupRequest\x1a6.com.evrblk.grackle.preview.AddJobsToWaitGroupResponse\"\x00\x12\x9a\x01\n" +
	"\x19CompleteJobsFromWaitGroup\x12<.com.evrblk.grackle.preview.CompleteJobsFromWaitGroupRequest\x1a=.com.evrblk.grackle.preview.CompleteJobsFromWaitGroupResponse\"\x00\x12p\n" +
	"\vAcquireLock\x12..com.evrblk.grackle.preview.AcquireLockRequest\x1a/.com.evrblk.grackle.preview.AcquireLockResponse\"\x00\x12p\n" +
	"\vReleaseLock\x12..com.evrblk.grackle.preview.ReleaseLockRequest\x1a/.com.evrblk.grackle.preview.ReleaseLockResponse\"\x00\x12d\n" +
	"\aGetLock\x12*.com.evrblk.grackle.preview.GetLockRequest\x1a+.com.evrblk.grackle.preview.GetLockResponse\"\x00\x12m\n" +
	"\n" +
	"DeleteLock\x12-.com.evrblk.grackle.preview.DeleteLockRequest\x1a..com.evrblk.grackle.preview.DeleteLockResponse\"\x00\x12j\n" +
	"\tListLocks\x12,.com.evrblk.grackle.preview.ListLocksRequest\x1a-.com.evrblk.grackle.preview.ListLocksResponse\"\x00BPZ3github.com/evrblk/evrblk-go/grackle/preview;grackle\xea\x02\x18Evrblk::Grackle::Previewb\x06proto3"

var (
	file_proto_grackle_preview_api_proto_rawDescOnce sync.Once
	file_proto_grackle_preview_api_proto_rawDescData []byte
)

func file_proto_grackle_preview_api_proto_rawDescGZIP() []byte {
	file_proto_grackle_preview_api_proto_rawDescOnce.Do(func() {
		file_proto_grackle_preview_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_grackle_preview_api_proto_rawDesc), len(file_proto_grackle_preview_api_proto_rawDesc)))
	})
	return file_proto_grackle_preview_api_proto_rawDescData
}

var file_proto_grackle_preview_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_grackle_preview_api_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_proto_grackle_preview_api_proto_goTypes = []any{
	(LockState)(0),                            // 0: com.evrblk.grackle.preview.LockState
	(*CreateNamespaceRequest)(nil),            // 1: com.evrblk.grackle.preview.CreateNamespaceRequest
	(*CreateNamespaceResponse)(nil),           // 2: com.evrblk.grackle.preview.CreateNamespaceResponse
	(*ListNamespacesRequest)(nil),             // 3: com.evrblk.grackle.preview.ListNamespacesRequest
	(*ListNamespacesResponse)(nil),            // 4: com.evrblk.grackle.preview.ListNamespacesResponse
	(*GetNamespaceRequest)(nil),               // 5: com.evrblk.grackle.preview.GetNamespaceRequest
	(*GetNamespaceResponse)(nil),              // 6: com.evrblk.grackle.preview.GetNamespaceResponse
	(*DeleteNamespaceRequest)(nil),            // 7: com.evrblk.grackle.preview.DeleteNamespaceRequest
	(*DeleteNamespaceResponse)(nil),           // 8: com.evrblk.grackle.preview.DeleteNamespaceResponse
	(*UpdateNamespaceRequest)(nil),            // 9: com.evrblk.grackle.preview.UpdateNamespaceRequest
	(*UpdateNamespaceResponse)(nil),           // 10: com.evrblk.grackle.preview.UpdateNamespaceResponse
	(*CreateSemaphoreRequest)(nil),            // 11: com.evrblk.grackle.preview.CreateSemaphoreRequest
	(*CreateSemaphoreResponse)(nil),           // 12: com.evrblk.grackle.preview.CreateSemaphoreResponse
	(*ListSemaphoresRequest)(nil),             // 13: com.evrblk.grackle.preview.ListSemaphoresRequest
	(*ListSemaphoresResponse)(nil),            // 14: com.evrblk.grackle.preview.ListSemaphoresResponse
	(*GetSemaphoreRequest)(nil),               // 15: com.evrblk.grackle.preview.GetSemaphoreRequest
	(*GetSemaphoreResponse)(nil),              // 16: com.evrblk.grackle.preview.GetSemaphoreResponse
	(*AcquireSemaphoreRequest)(nil),           // 17: com.evrblk.grackle.preview.AcquireSemaphoreRequest
	(*AcquireSemaphoreResponse)(nil),          // 18: com.evrblk.grackle.preview.AcquireSemaphoreResponse
	(*ReleaseSemaphoreRequest)(nil),           // 19: com.evrblk.grackle.preview.ReleaseSemaphoreRequest
	(*ReleaseSemaphoreResponse)(nil),          // 20: com.evrblk.grackle.preview.ReleaseSemaphoreResponse
	(*UpdateSemaphoreRequest)(nil),            // 21: com.evrblk.grackle.preview.UpdateSemaphoreRequest
	(*UpdateSemaphoreResponse)(nil),           // 22: com.evrblk.grackle.preview.UpdateSemaphoreResponse
	(*DeleteSemaphoreRequest)(nil),            // 23: com.evrblk.grackle.preview.DeleteSemaphoreRequest
	(*DeleteSemaphoreResponse)(nil),           // 24: com.evrblk.grackle.preview.DeleteSemaphoreResponse
	(*Semaphore)(nil),                         // 25: com.evrblk.grackle.preview.Semaphore
	(*SemaphoreHolder)(nil),                   // 26: com.evrblk.grackle.preview.SemaphoreHolder
	(*CreateWaitGroupRequest)(nil),            // 27: com.evrblk.grackle.preview.CreateWaitGroupRequest
	(*CreateWaitGroupResponse)(nil),           // 28: com.evrblk.grackle.preview.CreateWaitGroupResponse
	(*ListWaitGroupsRequest)(nil),             // 29: com.evrblk.grackle.preview.ListWaitGroupsRequest
	(*ListWaitGroupsResponse)(nil),            // 30: com.evrblk.grackle.preview.ListWaitGroupsResponse
	(*GetWaitGroupRequest)(nil),               // 31: com.evrblk.grackle.preview.GetWaitGroupRequest
	(*GetWaitGroupResponse)(nil),              // 32: com.evrblk.grackle.preview.GetWaitGroupResponse
	(*DeleteWaitGroupRequest)(nil),            // 33: com.evrblk.grackle.preview.DeleteWaitGroupRequest
	(*DeleteWaitGroupResponse)(nil),           // 34: com.evrblk.grackle.preview.DeleteWaitGroupResponse
	(*AddJobsToWaitGroupRequest)(nil),         // 35: com.evrblk.grackle.preview.AddJobsToWaitGroupRequest
	(*AddJobsToWaitGroupResponse)(nil),        // 36: com.evrblk.grackle.preview.AddJobsToWaitGroupResponse
	(*CompleteJobsFromWaitGroupRequest)(nil),  // 37: com.evrblk.grackle.preview.CompleteJobsFromWaitGroupRequest
	(*CompleteJobsFromWaitGroupResponse)(nil), // 38: com.evrblk.grackle.preview.CompleteJobsFromWaitGroupResponse
	(*WaitGroup)(nil),                         // 39: com.evrblk.grackle.preview.WaitGroup
	(*AcquireLockRequest)(nil),                // 40: com.evrblk.grackle.preview.AcquireLockRequest
	(*AcquireLockResponse)(nil),               // 41: com.evrblk.grackle.preview.AcquireLockResponse
	(*ReleaseLockRequest)(nil),                // 42: com.evrblk.grackle.preview.ReleaseLockRequest
	(*ReleaseLockResponse)(nil),               // 43: com.evrblk.grackle.preview.ReleaseLockResponse
	(*GetLockRequest)(nil),                    // 44: com.evrblk.grackle.preview.GetLockRequest
	(*GetLockResponse)(nil),                   // 45: com.evrblk.grackle.preview.GetLockResponse
	(*DeleteLockRequest)(nil),                 // 46: com.evrblk.grackle.preview.DeleteLockRequest
	(*DeleteLockResponse)(nil),                // 47: com.evrblk.grackle.preview.DeleteLockResponse
	(*ListLocksRequest)(nil),                  // 48: com.evrblk.grackle.preview.ListLocksRequest
	(*ListLocksResponse)(nil),                 // 49: com.evrblk.grackle.preview.ListLocksResponse
	(*Lock)(nil),                              // 50: com.evrblk.grackle.preview.Lock
	(*LockHolder)(nil),                        // 51: com.evrblk.grackle.preview.LockHolder
	(*Namespace)(nil),                         // 52: com.evrblk.grackle.preview.Namespace
}
var file_proto_grackle_preview_api_proto_depIdxs = []int32{
	52, // 0: com.evrblk.grackle.preview.CreateNamespaceResponse.namespace:type_name -> com.evrblk.grackle.preview.Namespace
	52, // 1: com.evrblk.grackle.preview.ListNamespacesResponse.namespaces:type_name -> com.evrblk.grackle.preview.Namespace
	52, // 2: com.evrblk.grackle.preview.GetNamespaceResponse.namespace:type_name -> com.evrblk.grackle.preview.Namespace
	52, // 3: com.evrblk.grackle.preview.UpdateNamespaceResponse.namespace:type_name -> com.evrblk.grackle.preview.Namespace
	25, // 4: com.evrblk.grackle.preview.CreateSemaphoreResponse.semaphore:type_name -> com.evrblk.grackle.preview.Semaphore
	25, // 5: com.evrblk.grackle.preview.ListSemaphoresResponse.semaphores:type_name -> com.evrblk.grackle.preview.Semaphore
	25, // 6: com.evrblk.grackle.preview.GetSemaphoreResponse.semaphore:type_name -> com.evrblk.grackle.preview.Semaphore
	25, // 7: com.evrblk.grackle.preview.AcquireSemaphoreResponse.semaphore:type_name -> com.evrblk.grackle.preview.Semaphore
	25, // 8: com.evrblk.grackle.preview.ReleaseSemaphoreResponse.semaphore:type_name -> com.evrblk.grackle.preview.Semaphore
	25, // 9: com.evrblk.grackle.preview.UpdateSemaphoreResponse.semaphore:type_name -> com.evrblk.grackle.preview.Semaphore
	26, // 10: com.evrblk.grackle.preview.Semaphore.semaphore_holders:type_name -> com.evrblk.grackle.preview.SemaphoreHolder
	39, // 11: com.evrblk.grackle.preview.CreateWaitGroupResponse.wait_group:type_name -> com.evrblk.grackle.preview.WaitGroup
	39, // 12: com.evrblk.grackle.preview.ListWaitGroupsResponse.wait_groups:type_name -> com.evrblk.grackle.preview.WaitGroup
	39, // 13: com.evrblk.grackle.preview.GetWaitGroupResponse.wait_group:type_name -> com.evrblk.grackle.preview.WaitGroup
	39, // 14: com.evrblk.grackle.preview.AddJobsToWaitGroupResponse.wait_group:type_name -> com.evrblk.grackle.preview.WaitGroup
	39, // 15: com.evrblk.grackle.preview.CompleteJobsFromWaitGroupResponse.wait_group:type_name -> com.evrblk.grackle.preview.WaitGroup
	50, // 16: com.evrblk.grackle.preview.AcquireLockResponse.lock:type_name -> com.evrblk.grackle.preview.Lock
	50, // 17: com.evrblk.grackle.preview.ReleaseLockResponse.lock:type_name -> com.evrblk.grackle.preview.Lock
	50, // 18: com.evrblk.grackle.preview.GetLockResponse.lock:type_name -> com.evrblk.grackle.preview.Lock
	50, // 19: com.evrblk.grackle.preview.ListLocksResponse.locks:type_name -> com.evrblk.grackle.preview.Lock
	0,  // 20: com.evrblk.grackle.preview.Lock.state:type_name -> com.evrblk.grackle.preview.LockState
	51, // 21: com.evrblk.grackle.preview.Lock.write_lock_holder:type_name -> com.evrblk.grackle.preview.LockHolder
	51, // 22: com.evrblk.grackle.preview.Lock.read_lock_holders:type_name -> com.evrblk.grackle.preview.LockHolder
	1,  // 23: com.evrblk.grackle.preview.GracklePreviewApi.CreateNamespace:input_type -> com.evrblk.grackle.preview.CreateNamespaceRequest
	3,  // 24: com.evrblk.grackle.preview.GracklePreviewApi.ListNamespaces:input_type -> com.evrblk.grackle.preview.ListNamespacesRequest
	5,  // 25: com.evrblk.grackle.preview.GracklePreviewApi.GetNamespace:input_type -> com.evrblk.grackle.preview.GetNamespaceRequest
	7,  // 26: com.evrblk.grackle.preview.GracklePreviewApi.DeleteNamespace:input_type -> com.evrblk.grackle.preview.DeleteNamespaceRequest
	9,  // 27: com.evrblk.grackle.preview.GracklePreviewApi.UpdateNamespace:input_type -> com.evrblk.grackle.preview.UpdateNamespaceRequest
	11, // 28: com.evrblk.grackle.preview.GracklePreviewApi.CreateSemaphore:input_type -> com.evrblk.grackle.preview.CreateSemaphoreRequest
	13, // 29: com.evrblk.grackle.preview.GracklePreviewApi.ListSemaphores:input_type -> com.evrblk.grackle.preview.ListSemaphoresRequest
	15, // 30: com.evrblk.grackle.preview.GracklePreviewApi.GetSemaphore:input_type -> com.evrblk.grackle.preview.GetSemaphoreRequest
	17, // 31: com.evrblk.grackle.preview.GracklePreviewApi.AcquireSemaphore:input_type -> com.evrblk.grackle.preview.AcquireSemaphoreRequest
	19, // 32: com.evrblk.grackle.preview.GracklePreviewApi.ReleaseSemaphore:input_type -> com.evrblk.grackle.preview.ReleaseSemaphoreRequest
	21, // 33: com.evrblk.grackle.preview.GracklePreviewApi.UpdateSemaphore:input_type -> com.evrblk.grackle.preview.UpdateSemaphoreRequest
	23, // 34: com.evrblk.grackle.preview.GracklePreviewApi.DeleteSemaphore:input_type -> com.evrblk.grackle.preview.DeleteSemaphoreRequest
	27, // 35: com.evrblk.grackle.preview.GracklePreviewApi.CreateWaitGroup:input_type -> com.evrblk.grackle.preview.CreateWaitGroupRequest
	29, // 36: com.evrblk.grackle.preview.GracklePreviewApi.ListWaitGroups:input_type -> com.evrblk.grackle.preview.ListWaitGroupsRequest
	31, // 37: com.evrblk.grackle.preview.GracklePreviewApi.GetWaitGroup:input_type -> com.evrblk.grackle.preview.GetWaitGroupRequest
	33, // 38: com.evrblk.grackle.preview.GracklePreviewApi.DeleteWaitGroup:input_type -> com.evrblk.grackle.preview.DeleteWaitGroupRequest
	35, // 39: com.evrblk.grackle.preview.GracklePreviewApi.AddJobsToWaitGroup:input_type -> com.evrblk.grackle.preview.AddJobsToWaitGroupRequest
	37, // 40: com.evrblk.grackle.preview.GracklePreviewApi.CompleteJobsFromWaitGroup:input_type -> com.evrblk.grackle.preview.CompleteJobsFromWaitGroupRequest
	40, // 41: com.evrblk.grackle.preview.GracklePreviewApi.AcquireLock:input_type -> com.evrblk.grackle.preview.AcquireLockRequest
	42, // 42: com.evrblk.grackle.preview.GracklePreviewApi.ReleaseLock:input_type -> com.evrblk.grackle.preview.ReleaseLockRequest
	44, // 43: com.evrblk.grackle.preview.GracklePreviewApi.GetLock:input_type -> com.evrblk.grackle.preview.GetLockRequest
	46, // 44: com.evrblk.grackle.preview.GracklePreviewApi.DeleteLock:input_type -> com.evrblk.grackle.preview.DeleteLockRequest
	48, // 45: com.evrblk.grackle.preview.GracklePreviewApi.ListLocks:input_type -> com.evrblk.grackle.preview.ListLocksRequest
	2,  // 46: com.evrblk.grackle.preview.GracklePreviewApi.CreateNamespace:output_type -> com.evrblk.grackle.preview.CreateNamespaceResponse
	4,  // 47: com.evrblk.grackle.preview.GracklePreviewApi.ListNamespaces:output_type -> com.evrblk.grackle.preview.ListNamespacesResponse
	6,  // 48: com.evrblk.grackle.preview.GracklePreviewApi.GetNamespace:output_type -> com.evrblk.grackle.preview.GetNamespaceResponse
	8,  // 49: com.evrblk.grackle.preview.GracklePreviewApi.DeleteNamespace:output_type -> com.evrblk.grackle.preview.DeleteNamespaceResponse
	10, // 50: com.evrblk.grackle.preview.GracklePreviewApi.UpdateNamespace:output_type -> com.evrblk.grackle.preview.UpdateNamespaceResponse
	12, // 51: com.evrblk.grackle.preview.GracklePreviewApi.CreateSemaphore:output_type -> com.evrblk.grackle.preview.CreateSemaphoreResponse
	14, // 52: com.evrblk.grackle.preview.GracklePreviewApi.ListSemaphores:output_type -> com.evrblk.grackle.preview.ListSemaphoresResponse
	16, // 53: com.evrblk.grackle.preview.GracklePreviewApi.GetSemaphore:output_type -> com.evrblk.grackle.preview.GetSemaphoreResponse
	18, // 54: com.evrblk.grackle.preview.GracklePreviewApi.AcquireSemaphore:output_type -> com.evrblk.grackle.preview.AcquireSemaphoreResponse
	20, // 55: com.evrblk.grackle.preview.GracklePreviewApi.ReleaseSemaphore:output_type -> com.evrblk.grackle.preview.ReleaseSemaphoreResponse
	22, // 56: com.evrblk.grackle.preview.GracklePreviewApi.UpdateSemaphore:output_type -> com.evrblk.grackle.preview.UpdateSemaphoreResponse
	24, // 57: com.evrblk.grackle.preview.GracklePreviewApi.DeleteSemaphore:output_type -> com.evrblk.grackle.preview.DeleteSemaphoreResponse
	28, // 58: com.evrblk.grackle.preview.GracklePreviewApi.CreateWaitGroup:output_type -> com.evrblk.grackle.preview.CreateWaitGroupResponse
	30, // 59: com.evrblk.grackle.preview.GracklePreviewApi.ListWaitGroups:output_type -> com.evrblk.grackle.preview.ListWaitGroupsResponse
	32, // 60: com.evrblk.grackle.preview.GracklePreviewApi.GetWaitGroup:output_type -> com.evrblk.grackle.preview.GetWaitGroupResponse
	34, // 61: com.evrblk.grackle.preview.GracklePreviewApi.DeleteWaitGroup:output_type -> com.evrblk.grackle.preview.DeleteWaitGroupResponse
	36, // 62: com.evrblk.grackle.preview.GracklePreviewApi.AddJobsToWaitGroup:output_type -> com.evrblk.grackle.preview.AddJobsToWaitGroupResponse
	38, // 63: com.evrblk.grackle.preview.GracklePreviewApi.CompleteJobsFromWaitGroup:output_type -> com.evrblk.grackle.preview.CompleteJobsFromWaitGroupResponse
	41, // 64: com.evrblk.grackle.preview.GracklePreviewApi.AcquireLock:output_type -> com.evrblk.grackle.preview.AcquireLockResponse
	43, // 65: com.evrblk.grackle.preview.GracklePreviewApi.ReleaseLock:output_type -> com.evrblk.grackle.preview.ReleaseLockResponse
	45, // 66: com.evrblk.grackle.preview.GracklePreviewApi.GetLock:output_type -> com.evrblk.grackle.preview.GetLockResponse
	47, // 67: com.evrblk.grackle.preview.GracklePreviewApi.DeleteLock:output_type -> com.evrblk.grackle.preview.DeleteLockResponse
	49, // 68: com.evrblk.grackle.preview.GracklePreviewApi.ListLocks:output_type -> com.evrblk.grackle.preview.ListLocksResponse
	46, // [46:69] is the sub-list for method output_type
	23, // [23:46] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_grackle_preview_api_proto_init() }
func file_proto_grackle_preview_api_proto_init() {
	if File_proto_grackle_preview_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_grackle_preview_api_proto_rawDesc), len(file_proto_grackle_preview_api_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_grackle_preview_api_proto_goTypes,
		DependencyIndexes: file_proto_grackle_preview_api_proto_depIdxs,
		EnumInfos:         file_proto_grackle_preview_api_proto_enumTypes,
		MessageInfos:      file_proto_grackle_preview_api_proto_msgTypes,
	}.Build()
	File_proto_grackle_preview_api_proto = out.File
	file_proto_grackle_preview_api_proto_goTypes = nil
	file_proto_grackle_preview_api_proto_depIdxs = nil
}
